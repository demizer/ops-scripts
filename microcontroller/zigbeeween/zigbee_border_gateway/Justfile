# Zigbee Border Gateway - Unified Justfile
# Controls both TinyS3 (WiFi) and XIAO C6 (Zigbee) devices

# Directories
TINYS3_DIR := "tinys3d_wifi"
XIAOC6_DIR := "xiaoc6_zigbee"

# List all available commands
default:
	@just --list

# Internal: Source ESP-IDF environment if needed
_source_esp_idf:
	#!/usr/bin/env fish
	if not type -q idf.py
		echo "ESP-IDF not found in PATH, sourcing environment..."
		echo "Run: 'source /opt/esp-idf/export.fish'"
		exit 1
	end

# ============================================================================
# TinyS3 (ESP32-S3 WiFi/HTTP Controller) Commands
# ============================================================================

# Erase TinyS3 flash only (REQUIRED: just erase-tinys3 /dev/ttyACM0)
erase-tinys3 PORT: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Erasing TinyS3 flash..."
	echo ">>> Using port: {{PORT}}"
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && idf.py -p {{PORT}} erase-flash
	echo ">>> TinyS3 flash erased!"

# Clean TinyS3 only (build artifacts only, keeps sdkconfig)
clean-tinys3: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Cleaning TinyS3..."
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && idf.py fullclean
	echo ">>> TinyS3 clean complete!"

# Deep clean TinyS3 only
deep-clean-tinys3: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Deep cleaning TinyS3..."
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && rm -rf build sdkconfig managed_components dependencies.lock
	echo ">>> TinyS3 deep clean complete!"

# Build TinyS3 firmware only
build-tinys3: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Building TinyS3 firmware..."
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && idf.py build

# Flash TinyS3 only (REQUIRED: just flash-tinys3 /dev/ttyACM0)
flash-tinys3 PORT: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Flashing TinyS3..."
	echo ">>> Using port: {{PORT}}"
	echo ">>> Bootloader mode handled automatically - NO button pressing needed!"
	echo ""
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && idf.py -p {{PORT}} flash

# Monitor TinyS3 only (REQUIRED: just monitor-tinys3 /dev/ttyACM0)
monitor-tinys3 PORT: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Monitoring TinyS3..."
	echo ">>> Using port: {{PORT}}"
	echo ">>> Press Ctrl+] to exit"
	echo ""
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && idf.py -p {{PORT}} monitor

# TinyS3 development workflow (REQUIRED: just dev-tinys3 /dev/ttyACM0)
dev-tinys3 PORT: build-tinys3 (flash-tinys3 PORT) (monitor-tinys3 PORT)

# Configure TinyS3 (set WiFi credentials)
menuconfig-tinys3: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>>  Configuring TinyS3..."
	echo ">>> Set WiFi SSID and password"
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && idf.py menuconfig

# Set TinyS3 target (one-time setup)
set-target-tinys3: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Setting TinyS3 target to ESP32-S3..."
	cd {{justfile_directory()}}/{{TINYS3_DIR}} && idf.py set-target esp32s3
	echo ">>> Target set! Run: just menuconfig-tinys3 (to set WiFi)"

# ============================================================================
# XIAO C6 (ESP32-C6 Zigbee Coordinator) Commands
# ============================================================================

# Erase XIAO C6 flash only (REQUIRED: just erase-xiaoc6 /dev/ttyACM1)
erase-xiaoc6 PORT: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Erasing XIAO C6 flash..."
	echo ">>> Using port: {{PORT}}"
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && idf.py -p {{PORT}} erase-flash
	echo ">>> XIAO C6 flash erased!"

# Clean XIAO C6 only (build artifacts only, keeps sdkconfig)
clean-xiaoc6: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Cleaning XIAO C6..."
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && idf.py fullclean
	echo ">>> XIAO C6 clean complete!"

# Deep clean XIAO C6 only
deep-clean-xiaoc6: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Deep cleaning XIAO C6..."
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && rm -rf build sdkconfig managed_components dependencies.lock
	echo ">>> XIAO C6 deep clean complete!"

# Build XIAO C6 firmware only
build-xiaoc6: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Building XIAO C6 firmware..."
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && idf.py build

# Flash XIAO C6 only (REQUIRED: just flash-xiaoc6 /dev/ttyACM1)
flash-xiaoc6 PORT: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Flashing XIAO C6..."
	echo ">>> Using port: {{PORT}}"
	echo ">>> Bootloader mode handled automatically - NO button pressing needed!"
	echo ""
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && idf.py -p {{PORT}} flash

# Monitor XIAO C6 only (REQUIRED: just monitor-xiaoc6 /dev/ttyACM1)
monitor-xiaoc6 PORT: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Monitoring XIAO C6..."
	echo ">>> Using port: {{PORT}}"
	echo ">>> Press Ctrl+] to exit"
	echo ""
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && idf.py -p {{PORT}} monitor

# XIAO C6 development workflow (REQUIRED: just dev-xiaoc6 /dev/ttyACM1)
dev-xiaoc6 PORT: build-xiaoc6 (flash-xiaoc6 PORT) (monitor-xiaoc6 PORT)

# Configure XIAO C6 (optional)
menuconfig-xiaoc6: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>>  Configuring XIAO C6..."
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && idf.py menuconfig

# Set XIAO C6 target (one-time setup)
set-target-xiaoc6: _source_esp_idf
	#!/usr/bin/env fish
	echo ">>> Setting XIAO C6 target to ESP32-C6..."
	cd {{justfile_directory()}}/{{XIAOC6_DIR}} && idf.py set-target esp32c6
	echo ">>> Target set!"

# ============================================================================
# Information & Setup
# ============================================================================

# Check if devices are connected
check:
	@echo ">>> Checking for connected devices..."
	@echo ""
	@echo ">>> Looking for USB serial devices:"
	@ls -1 /dev/ttyACM* /dev/ttyUSB* 2>/dev/null || echo "  ❌ No serial devices found"
	@echo ""
	@echo ">>> Use these ports explicitly with flash/monitor commands"
	@echo ">>> Example: just flash-tinys3 /dev/ttyACM0"

# First-time setup guide
setup:
	@echo "Zigbee Border Gateway - First Time Setup"
	@echo "════════════════════════════════════════"
	@echo ""
	@echo "1️⃣  Set targets (one-time):"
	@echo "   just set-target-tinys3"
	@echo "   just set-target-xiaoc6"
	@echo ""
	@echo "2️⃣  Configure WiFi (TinyS3 only):"
	@echo "   just menuconfig-tinys3"
	@echo "   (Set WiFi SSID and password)"
	@echo ""
	@echo "3️⃣  Build and flash both devices:"
	@echo "   just dev"
	@echo "   (Builds both, flashes sequentially with same USB cable)"
	@echo "   You'll be prompted to connect each device one at a time"
	@echo ""
	@echo "4️⃣  Wire up UART connection:"
	@echo "   TinyS3 TX (GPIO43) → XIAO C6 RX (GPIO17/D7)"
	@echo "   TinyS3 RX (GPIO44) → XIAO C6 TX (GPIO16/D6)"
	@echo "   Connect grounds"
	@echo ""
	@echo "5️⃣  Access web interface:"
	@echo "   Check TinyS3 monitor for IP address"
	@echo "   Open http://<ip>/ in browser"

# Quick help
help:
	@echo "Zigbee Border Gateway - Quick Reference"
	@echo "═══════════════════════════════════════"
	@echo ""
	@echo "TinyS3 Commands:"
	@echo "   just build-tinys3                  # Build TinyS3 firmware"
	@echo "   just flash-tinys3 /dev/ttyACM0     # Flash TinyS3"
	@echo "   just monitor-tinys3 /dev/ttyACM0   # Monitor TinyS3"
	@echo "   just dev-tinys3 /dev/ttyACM0       # Build, flash, monitor"
	@echo "   just clean-tinys3                  # Clean build artifacts"
	@echo "   just erase-tinys3 /dev/ttyACM0     # Erase flash"
	@echo ""
	@echo "XIAO C6 Coordinator Commands:"
	@echo "   just build-xiaoc6                  # Build coordinator firmware"
	@echo "   just flash-xiaoc6 /dev/ttyACM1     # Flash coordinator"
	@echo "   just monitor-xiaoc6 /dev/ttyACM1   # Monitor coordinator"
	@echo "   just dev-xiaoc6 /dev/ttyACM1       # Build, flash, monitor"
	@echo "   just clean-xiaoc6                  # Clean build artifacts"
	@echo "   just erase-xiaoc6 /dev/ttyACM1     # Erase flash (safe with hardcoded network)"
	@echo ""
	@echo "Information:"
	@echo "   just check            # Check device connections"
	@echo "   just setup            # First-time setup guide"
	@echo ""
	@echo ">>> Full command list: just --list"
